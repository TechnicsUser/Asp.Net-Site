@using WebApplication9.Models;


@model WebApplication9.Models.Fish

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using(Html.BeginForm("Edit", "Fish", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Fish</h4>

    @*@foreach(var item in ViewBag.fl as List<fishPhoto>) {
        <img src=@item />


        }*@
    @for(int i = 0; i < ViewBag.count; i++) {
        <img id="@i" data-bind="@Model.FishId" src="@Url.Action("FishPhoto", "Fish", new { id = Model.FishId, number = i  })" />


        }


    @*<img src="~/Images/noImg.png" class="remove-img" />*@


    <div class="form-group">
        @Html.LabelFor(m => m.Photo, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">

            <input type="file" name="FishPhoto" id="fileUpload" accept=".png,.jpg,.jpeg,.gif,.tif" multiple />

        </div>
    </div>



    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    @*<input type='file' multiple />*@

    <div id="myImg">
    </div>


    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.FishId)

    <div class="form-group col-lg-4">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-lg-12">
            @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-lg-2">
        @Html.LabelFor(model => model.TankSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-lg-12">
            @Html.EnumDropDownListFor(model => model.TankSize, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TankSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-lg-2">
        @Html.LabelFor(model => model.FishSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-lg-12">
            @Html.EditorFor(model => model.FishSize, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FishSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-lg-4">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-lg-12">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-lg-4">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-lg-12">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group  col-lg-4">
        @Html.LabelFor(model => model.ScientificName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-lg-12">
            @Html.EditorFor(model => model.ScientificName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ScientificName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group col-lg-4">
        @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-lg-12">
            @Html.TextAreaFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", style = "Height:120px" } })
            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
        </div>
    </div>









    <div class="form-group">
        @Html.LabelFor(model => model.SoldOut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.SoldOut)
                @Html.ValidationMessageFor(model => model.SoldOut, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FishAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.FishAvailable)
                @Html.ValidationMessageFor(model => model.FishAvailable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FishAvailableFrom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FishAvailableFrom, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FishAvailableFrom, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="form-group hidden">
        @Html.LabelFor(model => model.UploadedBy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UploadedBy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UploadedBy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.UploadedOn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UploadedOn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UploadedOn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.CommentId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CommentId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CommentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.Likes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Likes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Likes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.DisLikes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisLikes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisLikes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.Views, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Views, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Views, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $(function () {
        $(":file").change(function () {
            if (this.files && this.files[0]) {
                for (var i = 0; i < this.files.length; i++) {
                    var reader = new FileReader();
                    reader.onload = imageIsLoaded;
                    reader.readAsDataURL(this.files[i]);
                }
            }
        });
    });

    function imageIsLoaded(e) {
        $('#myImg').append('<img src=' + e.target.result + '>');
    }


    $('img').click(function (e) {

        var result = confirm("Want to delete?");
        if (result) {
            //Logic to delete the item
           var id = $(this).attr("id"); // now we need the data-id to retrieve the identifier for the item to delete              
            var num = $(this).attr("data-bind");
            $.post("/Fish/DeleteItem", { id: id , num :num });
           // var id = model.Id; //if you want to pass an Id parameter
 
            $(this).remove();

        }

        //If you want to remove all images
        //$(this).parent().find('img').remove();
    });

    function confirmDeleteVersion() {
        var recordToDelete = $(this).attr("data-id"); // now we need the data-id to retrieve the identifier for the item to delete              
        $("#dialog-confirm").dialog({
            resizable: false,
            height: 200,
            modal: true,
            buttons: {
                "Delete": function () {
                    $(this).dialog("close");
                    $.post("/Fish/DeleteItem", { id: recordToDelete }, DeleteSuccessfull);
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    };
</script>
<style>
     img {
        width: 250px;
        height: 200px;
    }
</style>